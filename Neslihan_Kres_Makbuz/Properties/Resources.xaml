<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:clr="clr-namespace:System;assembly=mscorlib">

    <clr:String x:Key="Version">2.0.0</clr:String>

    <SolidColorBrush x:Key="Primary1" Color="#BB86FC"/>
    <SolidColorBrush x:Key="Primary2" Color="#652EB2"/>
    <SolidColorBrush x:Key="Secondary1" Color="#3700B3"/>
    <SolidColorBrush x:Key="OnPrimary1" Color="#000000"/>
    <SolidColorBrush x:Key="OnPrimary2" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnSecondary1" Color="#FFFFFF"/>

    <SolidColorBrush x:Key="Background1" Color="#121212"/>
    <SolidColorBrush x:Key="Background2" Color="#FF252525"/>
    <SolidColorBrush x:Key="Background3" Color="#FF343434"/>
    <SolidColorBrush x:Key="Background4" Color="#FF555555"/>
    <SolidColorBrush x:Key="OnBackground1" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnBackground2" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnBackground3" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OnBackground4" Color="#FFFFFF"/>
    
    <SolidColorBrush x:Key="Error" Color="#CF6679"/>
    <SolidColorBrush x:Key="OnError" Color="#000000"/>

    <SolidColorBrush x:Key="Red" Color="#FFB20000"/>
    <SolidColorBrush x:Key="Gray" Color="#FFCBCBCB"/>
    <SolidColorBrush x:Key="DarkGray" Color="#FF747474"/>

    <FontFamily x:Key="MainFont">Verdana</FontFamily>

    <Style TargetType="Button" x:Key="WindowsButton">
        <Setter Property="Background" Value="{StaticResource Background1}" />
        <Setter Property="Foreground" Value="{StaticResource OnBackground1}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Padding" Value="0 0 0 10" />
        <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Gray}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource DarkGray}" />
            </Trigger>
        </Style.Triggers>
        
    </Style>

    <Style x:Key="WindowsCloseButton" BasedOn="{StaticResource WindowsButton}"
           TargetType="Button" >
        <Setter Property="Background" Value="{StaticResource Red}" />
    </Style>

    <Style TargetType="TextBlock" x:Key="SmallText">
        <Setter Property="Foreground" Value="{StaticResource OnBackground1}" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="{StaticResource OnPrimary1}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="{DynamicResource Primary1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Primary2}"/>
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Secondary1}"/>
                <Setter Property="Foreground" Value="{StaticResource OnSecondary1}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="ScrollBarRectangle" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="ScrollBarRectangle" Property="Width" Value="Auto" />
                            <Setter TargetName="ScrollBarRectangle" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Margin" Value="-5,0,0,0" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="#FF8C8C8C" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                        <Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="ScrollBarThumb" Background="{TemplateBinding Foreground}" Style="{StaticResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ScrollBarThumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="ScrollBarThumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Red"/>
        <Setter Property="Background" Value="LightBlue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border BorderThickness="0 0 1 1" BorderBrush="#484848" Grid.Row="1">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter ContentSource="SelectedContent"/>
                                </Border>
                            </Border>
                        </Border>
                        <TabPanel Grid.Row="0" IsItemsHost="true"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>